<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Daily Code Change Tracker</title>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jsdiff/5.1.0/diff.min.js"></script>
    <style>
        :root {
            --primary-color: #3498db;
            --secondary-color: #2c3e50;
            --light-grey: #ecf0f1;
            --medium-grey: #bdc3c7;
            --background-color: #f4f7f9;
            --text-color: #333;
            --added-bg: #e6ffed;
            --removed-bg: #ffeef0;
            --highlight-color: #f1c40f;
        }

        body {
            font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif;
            margin: 0;
            background-color: var(--background-color);
            color: var(--text-color);
            display: flex;
            flex-direction: column;
            height: 100vh;
        }

        header {
            background-color: var(--secondary-color);
            color: white;
            padding: 1rem 2rem;
            text-align: center;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }

        .container {
            display: flex;
            flex-grow: 1;
            overflow: hidden;
        }

        .left-panel {
            width: 40%;
            min-width: 300px;
            padding: 1.5rem;
            display: flex;
            flex-direction: column;
            border-right: 1px solid #ccc;
        }

        .left-panel h2 {
            margin-top: 0;
            color: var(--secondary-color);
            border-bottom: 2px solid var(--primary-color);
            padding-bottom: 0.5rem;
        }

        #codeInput {
            flex-grow: 1;
            width: 100%;
            padding: 10px;
            font-family: 'Courier New', Courier, monospace;
            font-size: 14px;
            border: 1px solid #ccc;
            border-radius: 4px;
            resize: none;
            box-sizing: border-box;
        }

        #addVersionBtn {
            margin-top: 1rem;
            padding: 12px 20px;
            background-color: var(--primary-color);
            color: white;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            font-size: 16px;
            font-weight: bold;
            transition: background-color 0.2s;
        }

        #addVersionBtn:hover {
            background-color: #2980b9;
        }
        
        #instructions {
            background-color: #eaf2f8;
            border-left: 4px solid var(--primary-color);
            padding: 10px;
            margin-bottom: 1rem;
            font-size: 0.9em;
        }

        .right-panel {
            width: 60%;
            display: flex;
            flex-direction: column;
            background-color: #ffffff;
        }

        #tabsContainer {
            display: flex;
            flex-wrap: wrap;
            padding: 0 1rem;
            border-bottom: 1px solid #ccc;
            background-color: var(--light-grey);
            flex-shrink: 0;
        }

        .tab {
            padding: 10px 15px;
            cursor: pointer;
            border: 1px solid transparent;
            border-bottom: none;
            margin-top: 5px;
            margin-right: 5px;
            border-radius: 5px 5px 0 0;
            background-color: var(--medium-grey);
            color: var(--secondary-color);
        }

        .tab.active {
            background-color: #ffffff;
            border-color: #ccc;
            border-bottom: 1px solid #ffffff;
            font-weight: bold;
        }

        .diff-view-wrapper {
            display: flex;
            flex-grow: 1;
            overflow: hidden;
        }

        #changesSummaryContainer {
            width: 200px;
            min-width: 180px;
            border-right: 1px solid #ccc;
            padding: 1rem;
            overflow-y: auto;
            background-color: #fdfdfd;
        }

        #changesSummaryContainer h3 {
            margin-top: 0;
            font-size: 1em;
            color: var(--secondary-color);
            border-bottom: 1px solid var(--light-grey);
            padding-bottom: 8px;
        }

        .change-link {
            display: block;
            padding: 8px;
            margin-bottom: 5px;
            border-radius: 4px;
            cursor: pointer;
            font-size: 0.9em;
            transition: background-color 0.2s;
        }

        .change-link:hover {
            background-color: var(--light-grey);
        }

        #diffContainer {
            flex-grow: 1;
            overflow: auto;
            padding: 1rem;
        }

        #diffContainer pre {
            margin: 0;
            font-family: 'Courier New', Courier, monospace;
            font-size: 14px;
            white-space: pre;
            word-wrap: normal;
        }
        
        .change-anchor {
            display: block;
        }
        
        .change-anchor.highlight {
            background-color: var(--highlight-color);
            transition: background-color 0.2s ease-in-out;
        }

        .line-added { background-color: var(--added-bg); display: block; }
        .line-removed { background-color: var(--removed-bg); text-decoration: line-through; display: block; }
        .line-context { color: #666; display: block; }
        
        .line-added::before { content: '+ '; color: #28a745; }
        .line-removed::before { content: '- '; color: #dc3545; }

    </style>
</head>
<body>

    <header>
        <h1>Daily Code Change Tracker</h1>
    </header>

    <div class="container">
        <div class="left-panel">
            <h2>Editor</h2>
             <div id="instructions">
                <strong>1. Start:</strong> Paste your initial code below and click "Add".<br>
                <strong>2. Work:</strong> Edit your code in your usual editor.<br>
                <strong>3. Track:</strong> Paste the new version and click "Add" again to see changes.
            </div>
            <textarea id="codeInput" placeholder="Paste your code here..."></textarea>
            <button id="addVersionBtn">Add as New Version</button>
        </div>
        <div class="right-panel">
            <div id="tabsContainer"></div>
            <div class="diff-view-wrapper">
                <div id="changesSummaryContainer"></div>
                <div id="diffContainer">
                    <p>Changes will be displayed here. Add your first version to begin.</p>
                </div>
            </div>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const codeInput = document.getElementById('codeInput');
            const addVersionBtn = document.getElementById('addVersionBtn');
            const tabsContainer = document.getElementById('tabsContainer');
            const diffContainer = document.getElementById('diffContainer');
            const changesSummaryContainer = document.getElementById('changesSummaryContainer');

            let codeVersions = [];
            let activeTabIndex = -1;

            addVersionBtn.addEventListener('click', () => {
                const newCode = codeInput.value;
                if (newCode.trim() === '') {
                    alert('Code input cannot be empty.');
                    return;
                }
                codeVersions.push(newCode);
                codeInput.value = ''; 
                activeTabIndex = codeVersions.length - 1;
                renderUI();
            });

            function renderUI() {
                renderTabs();
                renderDiff(activeTabIndex);
            }

            function renderTabs() {
                tabsContainer.innerHTML = '';
                codeVersions.forEach((_, index) => {
                    const tab = document.createElement('div');
                    tab.classList.add('tab');
                    tab.textContent = (index === 0) ? `Version 1 (Base)` : `Version ${index + 1} vs ${index}`;
                    if (index === activeTabIndex) tab.classList.add('active');
                    tab.addEventListener('click', () => {
                        activeTabIndex = index;
                        renderUI();
                    });
                    tabsContainer.appendChild(tab);
                });
            }

            function renderDiff(index) {
                // Clear previous content
                diffContainer.innerHTML = '';
                changesSummaryContainer.innerHTML = '';

                if (index < 0 || codeVersions.length === 0) {
                    diffContainer.innerHTML = '<p>Add your first version to begin.</p>';
                    return;
                }

                const newCode = codeVersions[index];
                const pre = document.createElement('pre');

                // Base case: Just show the code for Version 1
                if (index === 0) {
                    changesSummaryContainer.style.display = 'none';
                    pre.textContent = newCode;
                    diffContainer.appendChild(pre);
                    return;
                }
                
                // Show the summary panel for diff views
                changesSummaryContainer.style.display = 'block';
                const summaryTitle = document.createElement('h3');
                summaryTitle.textContent = "Changes Summary";
                changesSummaryContainer.appendChild(summaryTitle);

                // Diff case: Compare with previous version
                const oldCode = codeVersions[index - 1];
                const diff = Diff.diffLines(oldCode, newCode, { newlineIsToken: true });

                let changeIndex = 0;
                let currentLineNumber = 1;
                let inChangeBlock = false;
                
                diff.forEach(part => {
                    const isAddition = part.added;
                    const isRemoval = part.removed;
                    const span = document.createElement('span');

                    // --- Start of new Jump Link Logic ---
                    if (isAddition || isRemoval) {
                        if (!inChangeBlock) {
                            inChangeBlock = true;
                            changeIndex++;
                            const anchorId = `change-anchor-${changeIndex}`;

                            // 1. Create an invisible anchor in the diff view
                            const anchor = document.createElement('a');
                            anchor.id = anchorId;
                            anchor.className = 'change-anchor';
                            pre.appendChild(anchor);
                            
                            // 2. Create a clickable link in the summary panel
                            const link = document.createElement('div');
                            link.className = 'change-link';
                            link.textContent = `Change #${changeIndex} at Line ~${currentLineNumber}`;
                            link.addEventListener('click', () => {
                                const targetAnchor = document.getElementById(anchorId);
                                if (targetAnchor) {
                                    targetAnchor.scrollIntoView({ behavior: 'smooth', block: 'center' });
                                    // Add a temporary highlight
                                    targetAnchor.classList.add('highlight');
                                    setTimeout(() => targetAnchor.classList.remove('highlight'), 1500);
                                }
                            });
                            changesSummaryContainer.appendChild(link);
                        }
                    } else {
                        inChangeBlock = false;
                    }
                    // --- End of new Jump Link Logic ---

                    span.className = isAddition ? 'line-added' : (isRemoval ? 'line-removed' : 'line-context');
                    span.textContent = part.value;
                    pre.appendChild(span);

                    // Update line number count based on non-removed lines
                    if (!isRemoval) {
                         currentLineNumber += (part.count || 0);
                    }
                });

                if (changeIndex === 0) {
                    changesSummaryContainer.innerHTML += "<p>No changes found.</p>";
                }

                diffContainer.appendChild(pre);
            }
        });
    </script>
</body>
</html>
